/*
 * generated by Xtext 2.29.0
 */
package xray.validation

import org.eclipse.xtext.validation.Check
import xray.xRayDSL.DoseType
import xray.xRayDSL.Function
import xray.xRayDSL.HighBehavior
import xray.xRayDSL.LowBehavior
import xray.xRayDSL.SixPedals
import xray.xRayDSL.SystemType
import xray.xRayDSL.ThreePedals

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class XRayDSLValidator extends AbstractXRayDSLValidator {
	
@Check
def checkInput(SystemType system) { 
	if (system.configuration instanceof ThreePedals){
		switch(system.configuration.pedal3.dosetype){
			case DoseType::HIGH: {error("Pedal 3 must be used for low dose!!!",null)}
			default: {
			}
		}
		switch(system.configuration.pedal3.function){
			case Function::VIDEO: {error("Pedal 3 must be used for image mode!!!",null)}
			default: {
			}
		}
		
		switch(system.logic.DIDB.HB){
			case HighBehavior::HIGH_PRESSED_COMBINE:{
				switch system.logic.DIDB.LB{
					case LowBehavior::LOW_PRESSED_COMBINE:{
						error("High dose must interrupt low dose, low dose can not interrupt high dose!!!",null)
					}
					default: {
					}
				}
			}
			case HighBehavior::HIGH_PRESSED_IGNORE:{
				error("High dose must interrupt low dose, low dose can not interrupt high dose!!!",null)
			}
		}
	}
	
	if (system.configuration instanceof SixPedals){
		if(system.configuration.pedal1.dosetype.equals(DoseType::HIGH)){
			error("Pedal 1 must be used for low dose!!!",null)
		}
		
		if(system.configuration.pedal2.dosetype.equals(DoseType::HIGH)){
			error("Pedal 2 must be used for low dose!!!",null)
		}
		
		if(system.configuration.pedal3.dosetype.equals(DoseType::HIGH)){
			error("Pedal 3 must be used for low dose!!!",null)
		}
		
		switch((system.configuration as SixPedals).pedal4.dosetype){
			case DoseType::HIGH: {error("Pedal 4 must be used for projection toggle!!!",null)}
			case DoseType::LOW: {error("Pedal 4 must be used for projection toggle!!!",null)}
			default: {
			}
		}
		
		
		if((system.configuration as SixPedals).pedal5.dosetype.equals(DoseType::LOW)){
			error("Pedal 5 must be used for high dose!!!",null)
		}
		
		if((system.configuration as SixPedals).pedal6.dosetype.equals(DoseType::LOW)){
			error("Pedal 6 must be used for high dose!!!",null)
		}
		
		switch(system.logic.DIDB.HB){
			case HighBehavior::HIGH_PRESSED_COMBINE:{
				switch system.logic.DIDB.LB{
					case LowBehavior::LOW_PRESSED_COMBINE:{
						error("High dose must interrupt low dose, low dose can not interrupt high dose!!!",null)
					}
					default: {
					}
				}
			}
			case HighBehavior::HIGH_PRESSED_IGNORE:{
				error("High dose must interrupt low dose, low dose can not interrupt high dose!!!",null)
			}
		}
		
		if(system.logic.SPB.HB.equals(HighBehavior::HIGH_PRESSED_COMBINE)){
			error("The projection of high dose shoudn't be changed when high dose is active!!!",null)
		}
	}
	
	
} 



	
}
